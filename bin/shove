#!/usr/bin/env ruby

$:.unshift File.dirname(__FILE__) + "/../lib"

require "optparse"
require "shove"
require "pp"

ymlpath = File.expand_path("~/.shove.yml") 

# get network and key
unless FileTest.exist?(ymlpath)

  def getinput text
    print text
    gets.strip
  end

  access = {}
  
  loop do
    
    puts "Please enter your network information."
    puts "You can find your API access information @ https://shove.io/customer/network/api_access"
    
    access[:network] = getinput "Enter Network Id: "
    access[:key] = getinput "Enter Network Key: "

    Shove.configure access
    
    check = Shove.validate
    if check.status >= 400
      puts "Unable to validate network settings.  Error: #{check.message}"
    else
      puts "API Settings accepted.  Moving on..."
      break
    end
    
  end

  File.open(ymlpath, "w") do |f|
    f << access.to_yaml
  end
    
end

Shove.configure(ymlpath)

options = {
}

ARGV.options do |o|
  o.on("-h", "--help") { command = "help" }
  o.on("-v", "--version") { options[:command] = "version" }
  o.parse!
end


begin
  args = ARGV.dup
  ARGV.clear
  command = args.shift || options[:command]
  raise Exception unless command && Shove.respond_to?(command)
  puts Shove.send(command, *args).to_s

rescue Exception => ex
  abort File.read(__FILE__).split("__END__").last
end

__END__
Usage: shove command
       shove broadcast channel event data

OPTIONS

  -h, --help
    Show this message

COMMANDS

  broadcast       Broadcasts a message to your network

  hosts           List available hosts for your network

  direct          Send a message directly to a user

  authorize       Authorize a channel subscription
